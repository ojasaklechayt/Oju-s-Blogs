{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { ActionTypes } from './useListbox.types';\nimport defaultReducer from './defaultListboxReducer';\nimport useControllableReducer from './useControllableReducer';\nimport areArraysEqual from '../utils/areArraysEqual';\nconst defaultOptionComparer = (optionA, optionB) => optionA === optionB;\nconst defaultIsOptionDisabled = () => false;\nexport default function useListbox(props) {\n  var _props$optionIdGenera, _options$highlightedI;\n  const {\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    focusManagement = 'activeDescendant',\n    id: idProp,\n    isOptionDisabled = defaultIsOptionDisabled,\n    listboxRef: externalListboxRef,\n    multiple = false,\n    optionComparer = defaultOptionComparer,\n    options,\n    stateReducer: externalReducer\n  } = props;\n  const id = useId(idProp);\n  function defaultIdGenerator(_, index) {\n    return `${id}-option-${index}`;\n  }\n  const optionIdGenerator = (_props$optionIdGenera = props.optionIdGenerator) != null ? _props$optionIdGenera : defaultIdGenerator;\n  const propsWithDefaults = _extends({}, props, {\n    disabledItemsFocusable,\n    disableListWrap,\n    focusManagement,\n    isOptionDisabled,\n    multiple,\n    optionComparer\n  });\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(externalListboxRef, listboxRef);\n  const [{\n    highlightedValue,\n    selectedValue\n  }, dispatch] = useControllableReducer(defaultReducer, externalReducer, propsWithDefaults);\n  const highlightedIndex = React.useMemo(() => {\n    return highlightedValue == null ? -1 : options.findIndex(option => optionComparer(option, highlightedValue));\n  }, [highlightedValue, options, optionComparer]);\n  const previousOptions = React.useRef([]);\n  React.useEffect(() => {\n    if (areArraysEqual(previousOptions.current, options, optionComparer)) {\n      return;\n    }\n    dispatch({\n      type: ActionTypes.optionsChange,\n      options,\n      previousOptions: previousOptions.current,\n      props: propsWithDefaults\n    });\n    previousOptions.current = options; // No need to re-run this effect if props change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options, optionComparer, dispatch]);\n  const setSelectedValue = React.useCallback(option => {\n    dispatch({\n      type: ActionTypes.setValue,\n      value: option\n    });\n  }, [dispatch]);\n  const setHighlightedValue = React.useCallback(option => {\n    dispatch({\n      type: ActionTypes.setHighlight,\n      highlight: option\n    });\n  }, [dispatch]);\n  const createHandleOptionClick = (option, other) => event => {\n    var _other$onClick;\n    (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    event.preventDefault();\n    dispatch({\n      type: ActionTypes.optionClick,\n      option,\n      event,\n      props: propsWithDefaults\n    });\n  };\n  const createHandleOptionMouseOver = (option, other) => event => {\n    var _other$onMouseOver;\n    (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ActionTypes.optionHover,\n      option,\n      event,\n      props: propsWithDefaults\n    });\n  };\n  const createHandleKeyDown = other => event => {\n    var _other$onKeyDown;\n    (_other$onKeyDown = other.onKeyDown) == null ? void 0 : _other$onKeyDown.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    const keysToPreventDefault = [' ', 'Enter', 'ArrowUp', 'ArrowDown', 'Home', 'End', 'PageUp', 'PageDown'];\n    if (keysToPreventDefault.includes(event.key)) {\n      event.preventDefault();\n    }\n    dispatch({\n      type: ActionTypes.keyDown,\n      event,\n      props: propsWithDefaults\n    });\n  };\n  const createHandleBlur = other => event => {\n    var _other$onBlur, _listboxRef$current;\n    (_other$onBlur = other.onBlur) == null ? void 0 : _other$onBlur.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement)) {\n      // focus is within the listbox\n      return;\n    }\n    dispatch({\n      type: ActionTypes.blur,\n      event,\n      props: propsWithDefaults\n    });\n  };\n  const getRootProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, otherHandlers, {\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? optionIdGenerator(highlightedValue, highlightedIndex) : undefined,\n      id,\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers),\n      role: 'listbox',\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\n      ref: handleRef\n    });\n  };\n  const getOptionState = option => {\n    let selected;\n    const index = options.findIndex(opt => optionComparer(opt, option));\n    if (multiple) {\n      var _ref;\n      selected = ((_ref = selectedValue) != null ? _ref : []).some(value => value != null && optionComparer(option, value));\n    } else {\n      selected = optionComparer(option, selectedValue);\n    }\n    const disabled = isOptionDisabled(option, index);\n    return {\n      selected,\n      disabled,\n      highlighted: highlightedIndex === index\n    };\n  };\n  const getOptionTabIndex = optionState => {\n    if (focusManagement === 'activeDescendant') {\n      return undefined;\n    }\n    if (!optionState.highlighted) {\n      return -1;\n    }\n    if (optionState.disabled && !disabledItemsFocusable) {\n      return -1;\n    }\n    return 0;\n  };\n  const getOptionProps = function (option) {\n    let otherHandlers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const optionState = getOptionState(option);\n    const index = options.findIndex(opt => optionComparer(opt, option));\n    return _extends({}, otherHandlers, {\n      'aria-disabled': optionState.disabled || undefined,\n      'aria-selected': optionState.selected,\n      tabIndex: getOptionTabIndex(optionState),\n      id: optionIdGenerator(option, index),\n      onClick: createHandleOptionClick(option, otherHandlers),\n      onMouseOver: createHandleOptionMouseOver(option, otherHandlers),\n      role: 'option'\n    });\n  };\n  React.useDebugValue({\n    highlightedOption: options[highlightedIndex],\n    selectedOption: selectedValue\n  });\n  return {\n    getRootProps,\n    getOptionProps,\n    getOptionState,\n    highlightedOption: (_options$highlightedI = options[highlightedIndex]) != null ? _options$highlightedI : null,\n    selectedOption: selectedValue,\n    setSelectedValue,\n    setHighlightedValue\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useId","useId","ActionTypes","defaultReducer","useControllableReducer","areArraysEqual","defaultOptionComparer","optionA","optionB","defaultIsOptionDisabled","useListbox","props","_props$optionIdGenera","_options$highlightedI","disabledItemsFocusable","disableListWrap","focusManagement","id","idProp","isOptionDisabled","listboxRef","externalListboxRef","multiple","optionComparer","options","stateReducer","externalReducer","defaultIdGenerator","_","index","optionIdGenerator","propsWithDefaults","useRef","handleRef","highlightedValue","selectedValue","dispatch","highlightedIndex","useMemo","findIndex","option","previousOptions","useEffect","current","type","optionsChange","setSelectedValue","useCallback","setValue","value","setHighlightedValue","setHighlight","highlight","createHandleOptionClick","other","event","_other$onClick","onClick","call","defaultPrevented","preventDefault","optionClick","createHandleOptionMouseOver","_other$onMouseOver","onMouseOver","optionHover","createHandleKeyDown","_other$onKeyDown","onKeyDown","keysToPreventDefault","includes","key","keyDown","createHandleBlur","_other$onBlur","_listboxRef$current","onBlur","contains","document","activeElement","blur","getRootProps","otherHandlers","arguments","length","undefined","role","tabIndex","ref","getOptionState","selected","opt","_ref","some","disabled","highlighted","getOptionTabIndex","optionState","getOptionProps","useDebugValue","highlightedOption","selectedOption"],"sources":["D:/open_source/hacktobarfest/Oju-s-Blogs/Frontend/frontend/node_modules/@mui/base/ListboxUnstyled/useListbox.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { ActionTypes } from './useListbox.types';\nimport defaultReducer from './defaultListboxReducer';\nimport useControllableReducer from './useControllableReducer';\nimport areArraysEqual from '../utils/areArraysEqual';\n\nconst defaultOptionComparer = (optionA, optionB) => optionA === optionB;\n\nconst defaultIsOptionDisabled = () => false;\n\nexport default function useListbox(props) {\n  var _props$optionIdGenera, _options$highlightedI;\n\n  const {\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    focusManagement = 'activeDescendant',\n    id: idProp,\n    isOptionDisabled = defaultIsOptionDisabled,\n    listboxRef: externalListboxRef,\n    multiple = false,\n    optionComparer = defaultOptionComparer,\n    options,\n    stateReducer: externalReducer\n  } = props;\n  const id = useId(idProp);\n\n  function defaultIdGenerator(_, index) {\n    return `${id}-option-${index}`;\n  }\n\n  const optionIdGenerator = (_props$optionIdGenera = props.optionIdGenerator) != null ? _props$optionIdGenera : defaultIdGenerator;\n\n  const propsWithDefaults = _extends({}, props, {\n    disabledItemsFocusable,\n    disableListWrap,\n    focusManagement,\n    isOptionDisabled,\n    multiple,\n    optionComparer\n  });\n\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(externalListboxRef, listboxRef);\n  const [{\n    highlightedValue,\n    selectedValue\n  }, dispatch] = useControllableReducer(defaultReducer, externalReducer, propsWithDefaults);\n  const highlightedIndex = React.useMemo(() => {\n    return highlightedValue == null ? -1 : options.findIndex(option => optionComparer(option, highlightedValue));\n  }, [highlightedValue, options, optionComparer]);\n  const previousOptions = React.useRef([]);\n  React.useEffect(() => {\n    if (areArraysEqual(previousOptions.current, options, optionComparer)) {\n      return;\n    }\n\n    dispatch({\n      type: ActionTypes.optionsChange,\n      options,\n      previousOptions: previousOptions.current,\n      props: propsWithDefaults\n    });\n    previousOptions.current = options; // No need to re-run this effect if props change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options, optionComparer, dispatch]);\n  const setSelectedValue = React.useCallback(option => {\n    dispatch({\n      type: ActionTypes.setValue,\n      value: option\n    });\n  }, [dispatch]);\n  const setHighlightedValue = React.useCallback(option => {\n    dispatch({\n      type: ActionTypes.setHighlight,\n      highlight: option\n    });\n  }, [dispatch]);\n\n  const createHandleOptionClick = (option, other) => event => {\n    var _other$onClick;\n\n    (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    event.preventDefault();\n    dispatch({\n      type: ActionTypes.optionClick,\n      option,\n      event,\n      props: propsWithDefaults\n    });\n  };\n\n  const createHandleOptionMouseOver = (option, other) => event => {\n    var _other$onMouseOver;\n\n    (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    dispatch({\n      type: ActionTypes.optionHover,\n      option,\n      event,\n      props: propsWithDefaults\n    });\n  };\n\n  const createHandleKeyDown = other => event => {\n    var _other$onKeyDown;\n\n    (_other$onKeyDown = other.onKeyDown) == null ? void 0 : _other$onKeyDown.call(other, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const keysToPreventDefault = [' ', 'Enter', 'ArrowUp', 'ArrowDown', 'Home', 'End', 'PageUp', 'PageDown'];\n\n    if (keysToPreventDefault.includes(event.key)) {\n      event.preventDefault();\n    }\n\n    dispatch({\n      type: ActionTypes.keyDown,\n      event,\n      props: propsWithDefaults\n    });\n  };\n\n  const createHandleBlur = other => event => {\n    var _other$onBlur, _listboxRef$current;\n\n    (_other$onBlur = other.onBlur) == null ? void 0 : _other$onBlur.call(other, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement)) {\n      // focus is within the listbox\n      return;\n    }\n\n    dispatch({\n      type: ActionTypes.blur,\n      event,\n      props: propsWithDefaults\n    });\n  };\n\n  const getRootProps = (otherHandlers = {}) => {\n    return _extends({}, otherHandlers, {\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? optionIdGenerator(highlightedValue, highlightedIndex) : undefined,\n      id,\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers),\n      role: 'listbox',\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\n      ref: handleRef\n    });\n  };\n\n  const getOptionState = option => {\n    let selected;\n    const index = options.findIndex(opt => optionComparer(opt, option));\n\n    if (multiple) {\n      var _ref;\n\n      selected = ((_ref = selectedValue) != null ? _ref : []).some(value => value != null && optionComparer(option, value));\n    } else {\n      selected = optionComparer(option, selectedValue);\n    }\n\n    const disabled = isOptionDisabled(option, index);\n    return {\n      selected,\n      disabled,\n      highlighted: highlightedIndex === index\n    };\n  };\n\n  const getOptionTabIndex = optionState => {\n    if (focusManagement === 'activeDescendant') {\n      return undefined;\n    }\n\n    if (!optionState.highlighted) {\n      return -1;\n    }\n\n    if (optionState.disabled && !disabledItemsFocusable) {\n      return -1;\n    }\n\n    return 0;\n  };\n\n  const getOptionProps = (option, otherHandlers = {}) => {\n    const optionState = getOptionState(option);\n    const index = options.findIndex(opt => optionComparer(opt, option));\n    return _extends({}, otherHandlers, {\n      'aria-disabled': optionState.disabled || undefined,\n      'aria-selected': optionState.selected,\n      tabIndex: getOptionTabIndex(optionState),\n      id: optionIdGenerator(option, index),\n      onClick: createHandleOptionClick(option, otherHandlers),\n      onMouseOver: createHandleOptionMouseOver(option, otherHandlers),\n      role: 'option'\n    });\n  };\n\n  React.useDebugValue({\n    highlightedOption: options[highlightedIndex],\n    selectedOption: selectedValue\n  });\n  return {\n    getRootProps,\n    getOptionProps,\n    getOptionState,\n    highlightedOption: (_options$highlightedI = options[highlightedIndex]) != null ? _options$highlightedI : null,\n    selectedOption: selectedValue,\n    setSelectedValue,\n    setHighlightedValue\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}