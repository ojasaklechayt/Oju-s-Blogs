{"ast":null,"code":"export default function composeClasses(slots, getUtilityClass, classes) {\n  const output = {};\n  Object.keys(slots).forEach(\n  // `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n        acc.push(getUtilityClass(key));\n      }\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}","map":{"version":3,"names":["composeClasses","slots","getUtilityClass","classes","output","Object","keys","forEach","slot","reduce","acc","key","push","join"],"sources":["D:/open_source/hacktobarfest/Oju-s-Blogs/Frontend/frontend/node_modules/@mui/base/composeClasses/composeClasses.js"],"sourcesContent":["export default function composeClasses(slots, getUtilityClass, classes) {\n  const output = {};\n  Object.keys(slots).forEach( // `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n\n        acc.push(getUtilityClass(key));\n      }\n\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}"],"mappings":"AAAA,eAAe,SAASA,cAAcA,CAACC,KAAK,EAAEC,eAAe,EAAEC,OAAO,EAAE;EACtE,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjBC,MAAM,CAACC,IAAI,CAACL,KAAK,CAAC,CAACM,OAAO;EAAE;EAC5B;EACAC,IAAI,IAAI;IACNJ,MAAM,CAACI,IAAI,CAAC,GAAGP,KAAK,CAACO,IAAI,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MAC9C,IAAIA,GAAG,EAAE;QACP,IAAIR,OAAO,IAAIA,OAAO,CAACQ,GAAG,CAAC,EAAE;UAC3BD,GAAG,CAACE,IAAI,CAACT,OAAO,CAACQ,GAAG,CAAC,CAAC;QACxB;QAEAD,GAAG,CAACE,IAAI,CAACV,eAAe,CAACS,GAAG,CAAC,CAAC;MAChC;MAEA,OAAOD,GAAG;IACZ,CAAC,EAAE,EAAE,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;EAClB,CAAC,CAAC;EACF,OAAOT,MAAM;AACf"},"metadata":{},"sourceType":"module"}