{"ast":null,"code":"import * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n    updateMatch(); // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n  return match;\n} // eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\n\nconst maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return () => {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\nexport default function useMediaQuery(queryInput) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const theme = useTheme(); // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n  return match;\n}","map":{"version":3,"names":["React","getThemeProps","useThemeWithoutDefault","useTheme","useEnhancedEffect","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","supportMatchMedia","window","match","setMatch","useState","matches","active","undefined","queryList","updateMatch","addListener","removeListener","maybeReactUseSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","useCallback","getServerSnapshot","useMemo","getSnapshot","subscribe","mediaQueryList","notify","useMediaQuery","queryInput","options","arguments","length","theme","name","props","process","env","NODE_ENV","console","error","join","replace","useMediaQueryImplementation","useDebugValue"],"sources":["D:/open_source/hacktobarfest/Oju-s-Blogs/Frontend/frontend/node_modules/@mui/material/useMediaQuery/useMediaQuery.js"],"sourcesContent":["import * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    const queryList = matchMedia(query);\n\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch(); // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n  return match;\n} // eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\n\n\nconst maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\n\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return () => {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\n\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme(); // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n\n  return match;\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,EAAEC,sBAAsB,IAAIC,QAAQ,QAAQ,aAAa;AAC/E,OAAOC,iBAAiB,MAAM,4BAA4B;AAC1D;AACA;AACA;;AAEA,SAASC,gBAAgBA,CAACC,KAAK,EAAEC,cAAc,EAAEC,UAAU,EAAEC,aAAa,EAAEC,KAAK,EAAE;EACjF,MAAMC,iBAAiB,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACJ,UAAU,KAAK,WAAW;EACnG,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAAC,MAAM;IAC7C,IAAIL,KAAK,IAAIC,iBAAiB,EAAE;MAC9B,OAAOH,UAAU,CAACF,KAAK,CAAC,CAACU,OAAO;IAClC;IAEA,IAAIP,aAAa,EAAE;MACjB,OAAOA,aAAa,CAACH,KAAK,CAAC,CAACU,OAAO;IACrC,CAAC,CAAC;IACF;;IAGA,OAAOT,cAAc;EACvB,CAAC,CAAC;EACFH,iBAAiB,CAAC,MAAM;IACtB,IAAIa,MAAM,GAAG,IAAI;IAEjB,IAAI,CAACN,iBAAiB,EAAE;MACtB,OAAOO,SAAS;IAClB;IAEA,MAAMC,SAAS,GAAGX,UAAU,CAACF,KAAK,CAAC;IAEnC,MAAMc,WAAW,GAAGA,CAAA,KAAM;MACxB;MACA;MACA;MACA,IAAIH,MAAM,EAAE;QACVH,QAAQ,CAACK,SAAS,CAACH,OAAO,CAAC;MAC7B;IACF,CAAC;IAEDI,WAAW,CAAC,CAAC,CAAC,CAAC;;IAEfD,SAAS,CAACE,WAAW,CAACD,WAAW,CAAC;IAClC,OAAO,MAAM;MACXH,MAAM,GAAG,KAAK;MACdE,SAAS,CAACG,cAAc,CAACF,WAAW,CAAC;IACvC,CAAC;EACH,CAAC,EAAE,CAACd,KAAK,EAAEE,UAAU,EAAEG,iBAAiB,CAAC,CAAC;EAC1C,OAAOE,KAAK;AACd,CAAC,CAAC;;AAGF,MAAMU,8BAA8B,GAAGvB,KAAK,CAAC,sBAAsB,GAAG,EAAE,CAAC;AAEzE,SAASwB,gBAAgBA,CAAClB,KAAK,EAAEC,cAAc,EAAEC,UAAU,EAAEC,aAAa,EAAE;EAC1E,MAAMgB,kBAAkB,GAAGzB,KAAK,CAAC0B,WAAW,CAAC,MAAMnB,cAAc,EAAE,CAACA,cAAc,CAAC,CAAC;EACpF,MAAMoB,iBAAiB,GAAG3B,KAAK,CAAC4B,OAAO,CAAC,MAAM;IAC5C,IAAInB,aAAa,KAAK,IAAI,EAAE;MAC1B,MAAM;QACJO;MACF,CAAC,GAAGP,aAAa,CAACH,KAAK,CAAC;MACxB,OAAO,MAAMU,OAAO;IACtB;IAEA,OAAOS,kBAAkB;EAC3B,CAAC,EAAE,CAACA,kBAAkB,EAAEnB,KAAK,EAAEG,aAAa,CAAC,CAAC;EAC9C,MAAM,CAACoB,WAAW,EAAEC,SAAS,CAAC,GAAG9B,KAAK,CAAC4B,OAAO,CAAC,MAAM;IACnD,IAAIpB,UAAU,KAAK,IAAI,EAAE;MACvB,OAAO,CAACiB,kBAAkB,EAAE,MAAM,MAAM,CAAC,CAAC,CAAC;IAC7C;IAEA,MAAMM,cAAc,GAAGvB,UAAU,CAACF,KAAK,CAAC;IACxC,OAAO,CAAC,MAAMyB,cAAc,CAACf,OAAO,EAAEgB,MAAM,IAAI;MAC9C;MACAD,cAAc,CAACV,WAAW,CAACW,MAAM,CAAC;MAClC,OAAO,MAAM;QACXD,cAAc,CAACT,cAAc,CAACU,MAAM,CAAC;MACvC,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,CAACP,kBAAkB,EAAEjB,UAAU,EAAEF,KAAK,CAAC,CAAC;EAC3C,MAAMO,KAAK,GAAGU,8BAA8B,CAACO,SAAS,EAAED,WAAW,EAAEF,iBAAiB,CAAC;EACvF,OAAOd,KAAK;AACd;AAEA,eAAe,SAASoB,aAAaA,CAACC,UAAU,EAAgB;EAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAlB,SAAA,GAAAkB,SAAA,MAAG,CAAC,CAAC;EAC5D,MAAME,KAAK,GAAGnC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1B;EACA;EACA;;EAEA,MAAMQ,iBAAiB,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACJ,UAAU,KAAK,WAAW;EACnG,MAAM;IACJD,cAAc,GAAG,KAAK;IACtBC,UAAU,GAAGG,iBAAiB,GAAGC,MAAM,CAACJ,UAAU,GAAG,IAAI;IACzDC,aAAa,GAAG,IAAI;IACpBC;EACF,CAAC,GAAGT,aAAa,CAAC;IAChBsC,IAAI,EAAE,kBAAkB;IACxBC,KAAK,EAAEL,OAAO;IACdG;EACF,CAAC,CAAC;EAEF,IAAIG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAI,OAAOT,UAAU,KAAK,UAAU,IAAII,KAAK,KAAK,IAAI,EAAE;MACtDM,OAAO,CAACC,KAAK,CAAC,CAAC,gDAAgD,EAAE,8DAA8D,EAAE,0DAA0D,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1M;EACF;EAEA,IAAIxC,KAAK,GAAG,OAAO4B,UAAU,KAAK,UAAU,GAAGA,UAAU,CAACI,KAAK,CAAC,GAAGJ,UAAU;EAC7E5B,KAAK,GAAGA,KAAK,CAACyC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,CAAC;;EAE3C,MAAMC,2BAA2B,GAAGzB,8BAA8B,KAAKL,SAAS,GAAGM,gBAAgB,GAAGnB,gBAAgB;EACtH,MAAMQ,KAAK,GAAGmC,2BAA2B,CAAC1C,KAAK,EAAEC,cAAc,EAAEC,UAAU,EAAEC,aAAa,EAAEC,KAAK,CAAC;EAElG,IAAI+B,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC;IACA3C,KAAK,CAACiD,aAAa,CAAC;MAClB3C,KAAK;MACLO;IACF,CAAC,CAAC;EACJ;EAEA,OAAOA,KAAK;AACd"},"metadata":{},"sourceType":"module"}